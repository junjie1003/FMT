import argparse
import matplotlib.pyplot as plt


def data_helper(dataset, protected):
    task = dataset.capitalize() + "-" + protected.capitalize()
    print(task)

    if task == "Adult-Race":
        spd = [
            [0.045779, 0.053122, 0.031637, 0.048824, 0.036644, 0.041788, 0.016969, 0.050600, 0.033972, 0.036297],  # REW
            [0.012036, 0.012028, 0.000489, 0.004453, 0.020314, 0.009424, 0.022046, 0.023652, 0.026492, 0.018895],  # ADV
            [0.048622, 0.047154, 0.051743, 0.047747, 0.047391, 0.047505, 0.048925, 0.049924, 0.047674, 0.050123],  # CARE
            [0.070940, 0.071026, 0.071634, 0.071112, 0.071112, 0.071205, 0.071197, 0.071026, 0.071463, 0.071377],  # FMT_s
            [0.054578, 0.049391, 0.056559, 0.052854, 0.052995, 0.054149, 0.055490, 0.054905, 0.054390, 0.054226],  # FMT_d
        ]
        aaod = [
            [0.008323, 0.027148, 0.024189, 0.013953, 0.026267, 0.009204, 0.042441, 0.008483, 0.018181, 0.013735],  # REW
            [0.030728, 0.032420, 0.061006, 0.057330, 0.014458, 0.074348, 0.008424, 0.014379, 0.003366, 0.009729],  # ADV
            [0.013563, 0.017385, 0.014683, 0.015263, 0.014211, 0.013605, 0.016599, 0.016938, 0.016129, 0.017335],  # CARE
            [0.019131, 0.019298, 0.020852, 0.019355, 0.019355, 0.020455, 0.019522, 0.019298, 0.020737, 0.020571],  # FMT_s
            [0.014896, 0.016258, 0.012589, 0.015787, 0.015794, 0.015055, 0.017754, 0.016574, 0.016451, 0.016061],  # FMT_d
        ]
        eod = [
            [0.014521, 0.037804, 0.042120, 0.018836, 0.052441, 0.018170, 0.073030, 0.008530, 0.033460, 0.025145],  # REW
            [0.053344, 0.058000, 0.113553, 0.111554, 0.025066, 0.138485, 0.012425, 0.027403, 0.004447, 0.012089],  # ADV
            [0.017323, 0.021583, 0.018954, 0.018062, 0.020997, 0.018311, 0.016486, 0.017828, 0.020411, 0.018836],  # CARE
            [0.004467, 0.004799, 0.007793, 0.004799, 0.004799, 0.007461, 0.005132, 0.004799, 0.007793, 0.007461],  # FMT_s
            [0.007484, 0.013798, 0.001829, 0.010477, 0.009808, 0.008149, 0.011811, 0.010146, 0.010479, 0.009812],  # FMT_d
        ]

    elif task == "Adult-Sex":
        spd = [
            [0.116152, 0.069388, 0.080958, 0.098142, 0.092881, 0.097212, 0.093202, 0.077582, 0.082260, 0.084821],  # REW
            [0.043488, 0.021282, 0.071474, 0.056339, 0.046095, 0.039385, 0.043040, 0.058580, 0.052471, 0.058155],  # ADV
            [0.074542, 0.068314, 0.069262, 0.072416, 0.067362, 0.069112, 0.076498, 0.066157, 0.071239, 0.069003],  # CARE
            [0.110865, 0.111413, 0.111413, 0.111523, 0.111413, 0.110756, 0.110975, 0.111084, 0.111523, 0.110865],  # FMT_s
            [0.116579, 0.117741, 0.120273, 0.117065, 0.123066, 0.126359, 0.121284, 0.124217, 0.126443, 0.125968],  # FMT_d
        ]
        aaod = [
            [0.052105, 0.085801, 0.068763, 0.073219, 0.069859, 0.059850, 0.065316, 0.077917, 0.081761, 0.057500],  # REW
            [0.124138, 0.152483, 0.085567, 0.097653, 0.110949, 0.134825, 0.123622, 0.098764, 0.110211, 0.107652],  # ADV
            [0.039187, 0.042198, 0.041285, 0.039721, 0.040356, 0.042138, 0.043583, 0.036173, 0.066390, 0.042449],  # CARE
            [0.036130, 0.035759, 0.035759, 0.035583, 0.035759, 0.036306, 0.035953, 0.036033, 0.035583, 0.036130],  # FMT_s
            [0.019098, 0.019516, 0.020180, 0.022309, 0.022495, 0.025054, 0.020691, 0.025664, 0.027852, 0.024967],  # FMT_d
        ]
        eod = [
            [0.077837, 0.171218, 0.131480, 0.130295, 0.126115, 0.101487, 0.118144, 0.151539, 0.155384, 0.107938],  # REW
            [0.233158, 0.277039, 0.170159, 0.187214, 0.208593, 0.247408, 0.228055, 0.187015, 0.210801, 0.207526],  # ADV
            [0.042186, 0.041895, 0.040782, 0.042219, 0.041246, 0.040188, 0.044812, 0.040238, 0.070441, 0.040754],  # CARE
            [0.042243, 0.041185, 0.041185, 0.040832, 0.041185, 0.042596, 0.041891, 0.041891, 0.040832, 0.042243],  # FMT_s
            [0.003601, 0.003103, 0.002461, 0.009229, 0.006360, 0.008270, 0.002750, 0.011427, 0.015390, 0.009971],  # FMT_d
        ]

    elif task == "Bank-Age":
        spd = [
            [0.051473, 0.079631, 0.036010, 0.024523, 0.079543, 0.044289, 0.062378, 0.039029, 0.087903, 0.032819],  # REW
            [0.016227, 0.164550, 0.032514, 0.143818, 0.009572, 0.055452, 0.056266, 0.056863, 0.125848, 0.032554],  # ADV
            [0.052425, 0.071294, 0.050156, 0.070612, 0.068836, 0.058589, 0.053592, 0.053216, 0.065090, 0.065488],  # CARE
            [0.091874, 0.091987, 0.092100, 0.092100, 0.091874, 0.091874, 0.091649, 0.091762, 0.092100, 0.091987],  # FMT_s
            [0.094959, 0.091713, 0.091713, 0.094959, 0.091600, 0.095072, 0.095072, 0.095072, 0.091713, 0.095297],  # FMT_d
        ]
        aaod = [
            [0.065817, 0.031470, 0.015219, 0.058881, 0.011635, 0.040565, 0.070975, 0.097964, 0.029109, 0.052565],  # REW
            [0.081670, 0.099395, 0.038292, 0.078159, 0.146254, 0.034349, 0.041894, 0.004847, 0.051731, 0.049324],  # ADV
            [0.016385, 0.017285, 0.014613, 0.015283, 0.020340, 0.015873, 0.014149, 0.017848, 0.019128, 0.018250],  # CARE
            [0.019897, 0.019961, 0.020409, 0.020409, 0.019897, 0.019897, 0.019001, 0.019449, 0.020409, 0.019961],  # FMT_s
            [0.015585, 0.013328, 0.013328, 0.015585, 0.013263, 0.015650, 0.015650, 0.015650, 0.013328, 0.015779],  # FMT_d
        ]
        eod = [
            [0.117839, 0.035858, 0.022178, 0.109114, 0.002638, 0.077266, 0.114354, 0.175554, 0.018753, 0.100352],  # REW
            [0.152886, 0.113399, 0.074903, 0.083438, 0.275345, 0.060448, 0.068314, 0.002602, 0.038066, 0.096580],  # ADV
            [0.007324, 0.011873, 0.010871, 0.014234, 0.018448, 0.009496, 0.011383, 0.013028, 0.016061, 0.009373],  # CARE
            [0.016580, 0.016580, 0.017475, 0.017475, 0.016580, 0.016580, 0.014790, 0.015685, 0.017475, 0.016580],  # FMT_s
            [0.003056, 0.003056, 0.003056, 0.003056, 0.003056, 0.003056, 0.003056, 0.003056, 0.003056, 0.003056],  # FMT_d
        ]

    elif task == "Compas-Race":
        spd = [
            [0.074826, 0.052192, 0.077453, 0.075111, 0.067854, 0.076220, 0.090201, 0.047634, 0.071643, 0.098335],  # REW
            [0.119538, 0.100605, 0.062919, 0.173796, 0.068998, 0.058771, 0.101624, 0.210500, 0.026055, 0.117410],  # ADV
            [0.094312, 0.084726, 0.103475, 0.102996, 0.097002, 0.091104, 0.101085, 0.100537, 0.089300, 0.092371],  # CARE
            [0.199325, 0.198485, 0.199218, 0.200023, 0.199325, 0.191280, 0.195374, 0.196036, 0.197681, 0.198521],  # FMT_s
            [0.177231, 0.133251, 0.150020, 0.135325, 0.177928, 0.177033, 0.193714, 0.205710, 0.174031, 0.154007],  # FMT_d
        ]
        aaod = [
            [0.052738, 0.047341, 0.050858, 0.052960, 0.046479, 0.054435, 0.065266, 0.039337, 0.045725, 0.073486],  # REW
            [0.095966, 0.076151, 0.038144, 0.159628, 0.045609, 0.053154, 0.079766, 0.190151, 0.049279, 0.095183],  # ADV
            [0.073719, 0.092350, 0.068392, 0.086347, 0.070163, 0.072767, 0.088128, 0.088026, 0.091425, 0.077233],  # CARE
            [0.179762, 0.179207, 0.179789, 0.179878, 0.179762, 0.171716, 0.175955, 0.176331, 0.177687, 0.178960],  # FMT_s
            [0.152559, 0.107104, 0.123546, 0.109094, 0.149160, 0.154669, 0.169505, 0.178527, 0.145622, 0.128511],  # FMT_d
        ]
        eod = [
            [0.019506, 0.014951, 0.030728, 0.005886, 0.000271, 0.011812, 0.032964, 0.013672, 0.027842, 0.035374],  # REW
            [0.057972, 0.041623, 0.002035, 0.075609, 0.005878, 0.015270, 0.028802, 0.130092, 0.045562, 0.040505],  # ADV
            [0.042382, 0.050174, 0.041903, 0.047006, 0.050879, 0.046986, 0.047176, 0.043214, 0.049217, 0.051907],  # CARE
            [0.113751, 0.111027, 0.113110, 0.117437, 0.113751, 0.105739, 0.110066, 0.109424, 0.113751, 0.112149],  # FMT_s
            [0.126555, 0.091455, 0.096909, 0.087613, 0.132646, 0.121590, 0.139698, 0.157488, 0.132000, 0.101075],  # FMT_d
        ]

    elif task == "Compas-Sex":
        spd = [
            [0.057445, 0.089126, 0.067380, 0.087411, 0.061412, 0.052140, 0.026701, 0.074800, 0.050299, 0.073874],  # REW
            [0.111387, 0.153427, 0.054827, 0.174040, 0.195455, 0.224838, 0.287744, 0.074926, 0.428749, 0.192940],  # ADV
            [0.065845, 0.092563, 0.074877, 0.088016, 0.078409, 0.076426, 0.069318, 0.090484, 0.087284, 0.075563],  # CARE
            [0.069586, 0.070249, 0.069586, 0.070512, 0.071576, 0.068260, 0.070512, 0.073428, 0.067597, 0.076343],  # FMT_s
            [0.098752, 0.097426, 0.098089, 0.098089, 0.099678, 0.099678, 0.099678, 0.095837, 0.098752, 0.100341],  # FMT_d
        ]
        aaod = [
            [0.038496, 0.068456, 0.050623, 0.067268, 0.045735, 0.033374, 0.009597, 0.060388, 0.035353, 0.054197],  # REW
            [0.098730, 0.137492, 0.038354, 0.163147, 0.182168, 0.216646, 0.273963, 0.058282, 0.425216, 0.177404],  # ADV
            [0.056328, 0.091308, 0.066847, 0.065171, 0.059877, 0.088348, 0.076555, 0.066099, 0.061318, 0.074793],  # CARE
            [0.055430, 0.056063, 0.055430, 0.056835, 0.057392, 0.054036, 0.056835, 0.059335, 0.053338, 0.062831],  # FMT_s
            [0.087733, 0.086403, 0.087101, 0.087035, 0.089268, 0.089202, 0.089202, 0.084236, 0.087733, 0.089900],  # FMT_d
        ]
        eod = [
            [0.050601, 0.088186, 0.045487, 0.085828, 0.032901, 0.041751, 0.006808, 0.046808, 0.021979, 0.068015],  # REW
            [0.073186, 0.129848, 0.032263, 0.127788, 0.156340, 0.160828, 0.253401, 0.057958, 0.344722, 0.166397],  # ADV
            [0.045298, 0.072352, 0.051586, 0.067840, 0.053021, 0.051064, 0.047339, 0.048197, 0.058601, 0.058422],  # CARE
            [0.043710, 0.044975, 0.043710, 0.043710, 0.046239, 0.043710, 0.043710, 0.048710, 0.043710, 0.048710],  # FMT_s
            [0.053824, 0.052560, 0.052560, 0.053824, 0.051296, 0.052560, 0.052560, 0.053824, 0.053824, 0.052560],  # FMT_d
        ]

    elif task == "German-Age":
        spd = [
            [0.093220, 0.043962, 0.010328, 0.002913, 0.050847, 0.098782, 0.039460, 0.000265, 0.113347, 0.132945],  # REW
            [0.239936, 0.336335, 0.222722, 0.296610, 0.249735, 0.255297, 0.068061, 0.029926, 0.130561, 0.243909],  # ADV
            [0.052352, 0.042564, 0.050134, 0.047164, 0.059200, 0.043727, 0.045023, 0.055946, 0.048814, 0.039347],  # CARE
            [0.063824, 0.063824, 0.063824, 0.059587, 0.063824, 0.063824, 0.063824, 0.059587, 0.063824, 0.063824],  # FMT_s
            [0.055350, 0.055350, 0.059587, 0.059587, 0.055350, 0.055350, 0.055350, 0.059587, 0.055350, 0.055350],  # FMT_d
        ]
        aaod = [
            [0.116498, 0.125701, 0.010472, 0.087442, 0.078979, 0.076398, 0.068532, 0.161217, 0.075150, 0.102619],  # REW
            [0.197487, 0.310005, 0.180978, 0.263052, 0.208719, 0.226894, 0.023814, 0.033844, 0.081649, 0.202656],  # ADV
            [0.013628, 0.011895, 0.012748, 0.008833, 0.014972, 0.017205, 0.015603, 0.009176, 0.018995, 0.009635],  # CARE
            [0.016435, 0.016435, 0.016435, 0.013368, 0.016435, 0.016435, 0.016435, 0.013368, 0.016435, 0.016435],  # FMT_s
            [0.020217, 0.020217, 0.023284, 0.023284, 0.020217, 0.020217, 0.020217, 0.023284, 0.020217, 0.020217],  # FMT_d
        ]
        eod = [
            [0.163489, 0.097165, 0.009783, 0.024706, 0.076273, 0.046758, 0.055381, 0.088543, 0.070138, 0.079920],  # REW
            [0.207760, 0.253192, 0.184381, 0.247057, 0.226165, 0.184381, 0.045598, 0.014923, 0.147571, 0.223678],  # ADV
            [0.009586, 0.011739, 0.007129, 0.013067, 0.012198, 0.016311, 0.012938, 0.014007, 0.018710, 0.014385],  # CARE
            [0.030841, 0.030841, 0.030841, 0.024706, 0.030841, 0.030841, 0.030841, 0.024706, 0.030841, 0.030841],  # FMT_s
            [0.024706, 0.024706, 0.030841, 0.030841, 0.024706, 0.024706, 0.024706, 0.030841, 0.024706, 0.024706],  # FMT_d
        ]

    elif task == "German-Sex":
        spd = [
            [0.097693, 0.072516, 0.124227, 0.153927, 0.149254, 0.132670, 0.027589, 0.142771, 0.091663, 0.138700],  # REW
            [0.200211, 0.520579, 0.330318, 0.234735, 0.375094, 0.265189, 0.199156, 0.015528, 0.495100, 0.144580],  # ADV
            [0.082343, 0.061284, 0.075319, 0.070266, 0.082242, 0.081134, 0.072126, 0.065354, 0.072895, 0.074215],  # CARE
            [0.159506, 0.154530, 0.154530, 0.154530, 0.154530, 0.159506, 0.154530, 0.159506, 0.154530, 0.154530],  # FMT_s
            [0.179557, 0.184532, 0.189507, 0.184532, 0.184532, 0.179557, 0.189507, 0.174582, 0.189507, 0.189507],  # FMT_d
        ]
        aaod = [
            [0.115603, 0.084176, 0.160616, 0.200733, 0.192592, 0.164859, 0.064700, 0.165100, 0.130563, 0.175978],  # REW
            [0.257463, 0.602966, 0.397286, 0.288171, 0.460666, 0.326051, 0.253387, 0.034699, 0.615718, 0.195059],  # ADV
            [0.132356, 0.092457, 0.114166, 0.098489, 0.102181, 0.091872, 0.142693, 0.089922, 0.098669, 0.010104],  # CARE
            [0.223088, 0.219242, 0.219242, 0.219242, 0.219242, 0.223088, 0.219242, 0.223088, 0.219242, 0.219242],  # FMT_s
            [0.254414, 0.258260, 0.265303, 0.258260, 0.258260, 0.254414, 0.265303, 0.247372, 0.265303, 0.265303],  # FMT_d
        ]
        eod = [
            [0.113187, 0.098901, 0.123077, 0.140659, 0.138462, 0.120879, 0.081319, 0.141758, 0.057143, 0.124176],  # REW
            [0.172527, 0.414286, 0.284615, 0.212088, 0.284615, 0.232967, 0.169231, 0.012088, 0.328571, 0.130769],  # ADV
            [0.081455, 0.078572, 0.068921, 0.079141, 0.064727, 0.094606, 0.070947, 0.070384, 0.068797, 0.078215],  # CARE
            [0.124176, 0.116484, 0.116484, 0.116484, 0.116484, 0.124176, 0.116484, 0.124176, 0.116484, 0.116484],  # FMT_s
            [0.124176, 0.131868, 0.131868, 0.131868, 0.131868, 0.124176, 0.131868, 0.124176, 0.131868, 0.131868],  # FMT_d
        ]

    return spd, aaod, eod


def parse_opt():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-d", "--dataset", type=str, required=True, choices=["adult", "bank", "compas", "german"], help="Dataset name"
    )
    parser.add_argument("-p", "--protected", type=str, required=True, help="Protected attribute")
    opt = parser.parse_args()

    return opt


def main(opt):
    print("\nplot fairness")
    spd, aaod, eod = data_helper(opt.dataset, opt.protected)

    labels = ["REW", "ADV", "CARE", "FMT$_s$", "FMT$_d$"]
    colors = [
        (217 / 255.0, 33 / 255.0, 13 / 255.0),  # 正红
        (242 / 255.0, 149 / 255.0, 0 / 255.0),  # 橙色
        (255 / 255.0, 242 / 255.0, 0 / 255.0),  # 纯黄
        (0 / 255.0, 91 / 255.0, 171 / 255.0),  # 纯蓝
        (143 / 255.0, 7 / 255.0, 131 / 255.0),  # 紫色
    ]

    plt.figure(figsize=(9, 9))
    plt.rc("font", family="Times New Roman", size=32)

    boxplot_spd = plt.boxplot(spd, positions=(1, 1.4, 1.8, 2.2, 2.6), widths=0.3, patch_artist=True, labels=labels)
    for patch, color in zip(boxplot_spd["boxes"], colors):
        patch.set_facecolor(color)

    boxplot_aaod = plt.boxplot(aaod, positions=(3.8, 4.2, 4.6, 5, 5.4), widths=0.3, patch_artist=True, labels=labels)
    for patch, color in zip(boxplot_aaod["boxes"], colors):
        patch.set_facecolor(color)

    boxplot_eod = plt.boxplot(eod, positions=(6.6, 7, 7.4, 7.8, 8.2), widths=0.3, patch_artist=True, labels=labels)
    for patch, color in zip(boxplot_eod["boxes"], colors):
        patch.set_facecolor(color)

    x_position = [1, 3.8, 6.6]
    x_position_metrics = ["SPD", "AAOD", "EOD"]
    plt.xticks([i + 0.4 for i in x_position], x_position_metrics)

    if opt.dataset == "adult":
        y_major_locator = plt.MultipleLocator(0.05)
        ax = plt.gca()
        ax.yaxis.set_major_locator(y_major_locator)
        plt.ylim(0, 0.30)

    elif opt.dataset == "bank":
        y_major_locator = plt.MultipleLocator(0.05)
        ax = plt.gca()
        ax.yaxis.set_major_locator(y_major_locator)
        plt.ylim(0, 0.30)

    elif opt.dataset == "compas":
        y_major_locator = plt.MultipleLocator(0.09)
        ax = plt.gca()
        ax.yaxis.set_major_locator(y_major_locator)
        plt.ylim(0, 0.45)

    elif opt.dataset == "german":
        y_major_locator = plt.MultipleLocator(0.09)
        ax = plt.gca()
        ax.yaxis.set_major_locator(y_major_locator)
        plt.ylim(0, 0.63)

    # plt.legend(boxplot_spd["boxes"], labels, loc="best")
    plt.savefig(fname="../RQ5_results/boxplot/boxplot_%s-%s_fair.pdf" % (opt.dataset, opt.protected), bbox_inches="tight")


if __name__ == "__main__":
    opt = parse_opt()
    main(opt)
